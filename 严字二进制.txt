转UTF-8:  11100100 10111000 10100101   E4 B8 A5
原码:          100   111000   100101   4E 25

原码Unicode两个字节(4E 25)，转为UTF-8为三个字节


严字
1、小端存储，Unicode方式，带BOM，在文件中二进制为, UCS-2 LE BOM：
FF FE 25 4E   

2、大端存储,Unicode方式,带BOM，在文件中二进制为, UCS-2 BE BOM：
FE FF 4E 25

3、utf-8的严字在文件中二进制为,默认带BOM, UTF-8-BOM：
EF BB BF E4 B8 A5

4、utf-8的严字在文件中二进制为,无BOM, UTF-8：
E4 B8 A5

5、ansi的gb-2312在文件中存储为,没有BOM, ANSI:
D1 CF

**在VS中编辑的文本，通过Notepad++查看，右正角为GB2312,汉字符的16进制编码为UTF-8，

--------------
在wps的"符号"中， 严字的十六制编码：GB2312为 D1CF, Unicode为 4E25

在VS编辑时：

利用: 文件-->高级保存选项 ，可以选择 Unicode(UTF-8带签名),Unicode，unicode(big_endian),简体中文(GB2312)等方式保存文本，
   选择后就会以相应的代码保存,
      Unicode(UTF-8带签名): 文件头带ef bb bf，每个中文符号用三个字节的utf-8编码
	  Unicode:  文件头带 ff fe,每个中文符号用两个字节的unicode编码，低位在前，如严(4e25),在文件内序列是25 4e
	  unicode(big_endian): 文件头带fe ff,每个中文符号用两个字节的unicode编码,但高位在前,如严(4e25),在文件内序列是4e 25
	  简体中文(GB2312): 文件头没有标识，中文与utf-8一样,三个字符.

  不管保存文本的格式是什么，在VS编译后，在内存里保存，分两种情况，如果是char字符串，会转为gb2312,例如严字转为D1 CF，
    如果是wchar_t wts[]=L"严重";用宽字符保存，就只会转为25 4e即unicode小头;
	而char workTmp = '严'; 因为char为一个字节，就行只保存低位的CF
	而wchar_t wt=L'严'; 因为wchar_t为两个字节，直接保存25 4e

------------------------------------------------------

char localchar[128] = "a严";
   内存中为  61 D1 CF

string tmp_char = "a严重严重";  //如果是char字符串，同样也是 d1 cf(严) 
   内存中为   61 d1 cf d6 d8 d1 cf d6 d8

wstring source333 = String2WString( tmp_char);
   内存中，字符串为： 61 00 25 4e cd 91 25 4e cd 91    //25 4e 转为Unicode的编码


WCHAR str3[]=L"abcde";    //每个字符两个字节
WCHAR str4[]=L"严是中国人";    //每个字符占两个字节  严字编码为：25 4e



////////////////
